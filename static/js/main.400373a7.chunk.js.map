{"version":3,"sources":["Config/firebase.js","Components/SignIn/SignIn.js","Components/Register/Register.js","Components/Calendar/Screen.js","Components/Modals/Modal.js","Components/ListItem/Subtask.js","Components/Settings/Settings.js","App.js","Components/ListItem/ListItem.js","Components/Home/Home.js","Components/Navigation/Navigation.js","Components/DDay/DDay.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","firestore","SignIn","pr","onRouteChange","onUserChange","showmodal","newuser","email","pass","className","style","color","id","htmlFor","type","name","onChange","e","target","value","onClick","user","open","msg","auth","signInWithEmailAndPassword","then","userCredential","console","log","catch","error","message","newday","title","date","userId","a","currentUser","updateProfile","displayName","photoURL","collection","doc","set","username","dday","k","t","z","newPassword","Register","createUserWithEmailAndPassword","uid","writeUserData","db","newlist","displaydday","countdown","Screen","props","getquotes","state","get","querySnapshot","setState","data","fetch","response","json","quote","content","author","err","year","momentContext","format","month","daysIMonth","daysInMonth","curdate","curday","firstDayOfMonth","moment","startOf","handlechange","months","indexOf","handlechangeyear","weekdays","weekdaysshort","weekdaysShort","todayDay","thisMonth","thisYear","reqdate","time","Date","getdata","this","exists","loaded","endDate","i","length","diff","today","startDate","endDay","update","setInterval","clearInterval","blanks","push","daysM","c","reqdatechange","map","index","parseInt","days","d","toLocaleTimeString","React","Component","ListItem","requiredDate","showsubtask","req","where","forEach","href","updateSlide","Modal","p","setTimeout","clearTimeout","cname","mname","opacity","toggle","Subtask","task","subtasks","completed","openmodal","delete","desc","s","Array","from","document","querySelectorAll","input","done","display","justifyContent","checked","flag","splice","x","y","Home","slide","listdets","myRef","createRef","myModal","subtaskref","current","ref","src","alt","newdate","datemethod","split","fill","add","Navigation","route","class","alignSelf","signOut","window","location","reload","file","Settings","photo","updatenavbar","modalref","uploadTask","storage","put","on","snapshot","progress","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","getDownloadURL","downloadURL","updateEmail","updatePassword","placeholder","files","changeprofilesettings","changeaccountsettings","cursor","DDay","data-date-format","valueAsDate","newd","sort","b","dateDiff","App","navref","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.400373a7.chunk.js","sourcesContent":["import  firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAFC-Z33Kgw61Ah8Pi9ZW8PHTPtpoeOL2U\",\r\n    authDomain: \"coreo-49ca8.firebaseapp.com\",\r\n    projectId: \"coreo-49ca8\",\r\n    storageBucket: \"coreo-49ca8.appspot.com\",\r\n    messagingSenderId: \"778329306562\",\r\n    appId: \"1:778329306562:web:a957330eb1d159c70e125b\",\r\n    measurementId: \"G-JCTNKQPM8M\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics();\r\n  firebase.firestore();\r\n  \r\n  export default firebase","import React from 'react';\r\nimport firebase from '../../Config/firebase'\r\nconst SignIn=({onRouteChange, onUserChange, showmodal})=> {\r\n    var newuser={\r\n        email:'',\r\n        pass:''\r\n    }\r\n    var pr;\r\n  return (\r\n    <article className=\"br2 ba white b--white-10 mv5 w-100 w-50-m w-25-l mw5 center shadow-5\">\r\n        <main className=\"pa4 black-80\" style={{color:'white'}}>\r\n            <form className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                    <input className=\"pa2 input-reset ba b--white bg-transparent hover-bg-black hover-white w-100 white\" type=\"email\" name=\"email-address\"  id=\"email-address\" onChange={(e)=>{newuser.email=e.target.value}}/>\r\n                </div>\r\n                <div className=\"mv3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                    <input className=\"b pa2 input-reset ba b--white bg-transparent hover-bg-black hover-white w-100 white\" type=\"password\" name=\"password\"  id=\"password\" onChange={(e)=>{newuser.pass=e.target.value}}/>\r\n                </div>\r\n                </fieldset>\r\n                <div className=\"\">\r\n                <p \r\n                 onClick={()=>{\r\n\r\n                    if(newuser.pass==''|| newuser.email=='')\r\n                    {\r\n                         pr={\r\n                            open:true,\r\n                            color:'red',\r\n                            msg:'email or pw cannot be blank'\r\n                        }\r\n                        showmodal(pr);\r\n                        \r\n                    }\r\n                    else{\r\n                        pr={\r\n                            open:true,\r\n                            color:'blue',\r\n                            msg:'loading'\r\n                        }\r\n                        showmodal(pr);\r\n                        var user\r\n                    firebase.auth().signInWithEmailAndPassword(newuser.email, newuser.pass)\r\n                    .then((userCredential) => {\r\n                    // Signed in \r\n                    \r\n                     user = userCredential.user;\r\n                    console.log(user)\r\n                    onUserChange(user)\r\n                    \r\n                    onRouteChange('Home')\r\n                    // ...\r\n                    })\r\n                    .catch((error) => {\r\n                    \r\n                     pr={\r\n                        open:true,\r\n                        color:'red',\r\n                        msg:error.message\r\n                    }\r\n                    showmodal(pr);\r\n                    console.log(error)\r\n                    // ..\r\n\r\n                    });\r\n                    }\r\n                    \r\n                    \r\n                \r\n                    }}\r\n                className=\"b ph3 pv2 input-reset ba b--white bg-transparent grow pointer f6 dib white\" type=\"submit\" >Sign In</p>\r\n                </div>\r\n                <div className=\"lh-copy mt3\">\r\n                <p\r\n                onClick={()=>onRouteChange('Register')}\r\n                className=\"f6 link dim black db white\" >Register</p>\r\n                </div>\r\n            </form>\r\n        </main>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\nimport firebase from '../../Config/firebase'\r\nvar newuser={\r\n    name:'',\r\n    email:'',\r\n    pass:''\r\n}\r\nvar newday=[{\r\n    title:\"demo\",\r\n    date:\"31-07-2022\"\r\n}]\r\nvar pr={\r\n    open:false,\r\n    msg:'null',\r\n    color:'red'\r\n}\r\nasync function writeUserData(userId, showmodal) {\r\n    const user = firebase.auth().currentUser;\r\n\r\n        user.updateProfile({\r\n        displayName: newuser.name,\r\n        photoURL: \"https://firebasestorage.googleapis.com/v0/b/coreo-49ca8.appspot.com/o/default-profile.jpg?alt=media&token=57cdfc46-a697-4aa1-9a6a-8b565dd87391\"\r\n        }).then(() => {\r\n        // Update successful\r\n        // ...\r\n        }).catch((error) => {\r\n        // An error occurred\r\n        // ...\r\n        pr={\r\n            open:true,\r\n            color:'red',\r\n            msg:error.message\r\n        }\r\n        showmodal(pr);\r\n        console.log(error)\r\n        });  \r\n    await firebase.firestore().collection(userId).doc(\"user-data\").set({\r\n      username: newuser.name,\r\n      \r\n    });\r\n    \r\n    await firebase.firestore().collection(userId).doc(\"d-day\").set({\r\n        user: userId,\r\n        dday:newday\r\n      });\r\n\r\n      return 0;\r\n  }\r\n \r\nconst Register=({onRouteChange, onUserChange, showmodal})=> {\r\n  return (\r\n    <article className=\"br2 ba white b--white-10 mv5 w-100 w-50-m w-25-l mw5 center shadow-5\">\r\n        <main className=\"pa4 black-80\" style={{color:'white'}}>\r\n            <form className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\" key=\"1\">\r\n                <legend className=\"f4 fw6 ph0 mh0\" key=\"2\" >Register</legend>\r\n                <div className=\"mt3\" key=\"3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Name</label>\r\n                    <input className=\"pa2 input-reset ba b--white bg-transparent hover-bg-black hover-white w-100 white\" type=\"text\" name=\"username\"  id=\"username\" onChange={(e)=>{newuser.name=e.target.value}}/>\r\n                </div>\r\n                <div className=\"mt3\" key=\"4\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                    <input className=\"pa2 input-reset ba b--white bg-transparent hover-bg-black hover-white w-100 white\" type=\"email\" name=\"email-address\"  id=\"email-address\" onChange={(e)=>{newuser.email=e.target.value}}/>\r\n                </div>\r\n                <div className=\"mv3\" key=\"5\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                    <input className=\"b pa2 input-reset ba b--white bg-transparent hover-bg-black hover-white w-100 white\" type=\"password\" name=\"password\"  id=\"password\" onChange={(e)=>{newuser.pass=e.target.value}}/>\r\n                </div>\r\n                </fieldset>\r\n                <div className=\"\" key=\"7\">\r\n                <p key=\"8\"\r\n                onClick={ ()=>{\r\n                    if(newuser.pass==''|| newuser.email=='')\r\n                    {\r\n                         pr={\r\n                            open:true,\r\n                            color:'red',\r\n                            msg:'email or pw cannot be blank'\r\n                        }\r\n                        showmodal(pr);\r\n                        \r\n                    }\r\n                    else{\r\n                        pr={\r\n                            open:true,\r\n                            color:'blue',\r\n                            msg:'loading'\r\n                        }\r\n                        showmodal(pr);\r\n                    var user\r\n                     firebase.auth().createUserWithEmailAndPassword(newuser.email, newuser.pass)\r\n                    .then((userCredential) => {\r\n                    // Signed in \r\n                    \r\n                     user = userCredential.user;\r\n                    console.log(user)\r\n                    console.log(user.uid)\r\n                    onUserChange(user)\r\n                    writeUserData(user.uid, showmodal)\r\n                    onRouteChange('Home') \r\n                    \r\n                    }).catch((error) => {\r\n                        pr={\r\n                            open:true,\r\n                            color:'red',\r\n                            msg:error.message\r\n                        }\r\n                        showmodal(pr);\r\n                        console.log(error)\r\n                    // ..\r\n                    });\r\n                    \r\n                }\r\n                    // \r\n                    \r\n                    \r\n                }}\r\n                className=\"b ph3 pv2 input-reset ba b--white bg-transparent grow pointer f6 dib white\">Create Account</p>\r\n                </div>\r\n                <div className=\"lh-copy mt3\" key=\"9\">\r\n                </div>\r\n            </form>\r\n        </main>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Register;","import moment from 'moment';\r\nimport React from 'react';\r\nimport firebase from '../../Config/firebase'\r\n\r\n\r\nimport './Cal.css'\r\nconst db=firebase.firestore()\r\nvar k, newlist=[], displaydday=0, countdown='';\r\n//https://momentjs.com/docs/#/get-set/month/\r\nclass Screen extends React.Component{\r\n    constructor(props)\r\n    {\r\n        \r\n        super(props)\r\n       \r\n       \r\n        this.state={\r\n            user:props.user,\r\n            username:'user',\r\n            quote:'',\r\n            author:'',\r\n            momentContext: moment(),\r\n            weekdays:moment.weekdays(),\r\n            weekdaysshort:moment.weekdaysShort(),\r\n            months:moment.months(),\r\n            todayDay: moment().get(\"date\"),\r\n            thisMonth: moment().format(\"MMMM\"),\r\n            thisYear: moment().format(\"Y\"),\r\n            reqdate:moment().get(\"date\"),\r\n            time: new Date(),\r\n            showmodal: props.showmodal\r\n            \r\n        }\r\n        \r\n        displaydday=0;\r\n        countdown='';\r\n        this.getquotes()\r\n        this.getdata()\r\n    }\r\n    getdata(){\r\n        db.collection(this.state.user.uid).doc(\"d-day\")\r\n        .get().then((querySnapshot) => {\r\n            \r\n            \r\n            \r\n            if(querySnapshot.data()=='undefined' || querySnapshot.exists==false)\r\n            {\r\n                \r\n                this.setState({\r\n                    loaded:false\r\n                }, ()=>{\r\n                    this.getdata();\r\n                });\r\n            }\r\n            else{\r\n                \r\n                    \r\n                var endDate = moment(moment().format(\"DD-MM-YYYY\"), \"DD/MM/YYYY\");\r\n                newlist=querySnapshot.data().dday;\r\n                for(var i=0;i<newlist.length;i++)\r\n                {\r\n                    \r\n                    if(moment(newlist[i].date, \"DD-MM-YYYY\").diff(endDate, \"days\")<=7  &&moment(newlist[i].date, \"DD-MM-YYYY\").diff(endDate, \"days\")>=0)\r\n                    {\r\n                        displaydday=newlist[i].date+': '+newlist[i].title;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n                    \r\n                \r\n                if(displaydday==0)\r\n                {\r\n                    displaydday='no recent dday'\r\n                    countdown=''\r\n                }\r\n                else{\r\n                    var today=moment().format(\"DD-MM-YYYY\")\r\n                    var startDate = moment(displaydday, \"DD-MM-YYYY\");\r\n                    var endDay = moment(today, \"DD/MM/YYYY\");\r\n                    countdown= \"days left: \"+startDate.diff(endDay, \"days\");\r\n                    \r\n\r\n                }\r\n            }\r\n                \r\n            \r\n            this.setState({\r\n                loaded: true\r\n            }, ()=>{\r\n               \r\n            })\r\n            \r\n        }).catch(error=>{\r\n            var pr={\r\n                open:true,\r\n                msg:error.message,\r\n                color:'red'\r\n              }\r\n              this.state.showmodal(pr);\r\n              console.log(error)\r\n            \r\n        })\r\n      }\r\n    getquotes=async ()=>{\r\n        await db.collection(this.state.user.uid).doc('user-data').get().then((querySnapshot) => {\r\n            \r\n            this.setState({\r\n                username:querySnapshot.data().name,\r\n            })\r\n        })\r\n        //https://github.com/lukePeavey/quotable#get-random-quote\r\n        await fetch('https://api.quotable.io/random?maxLength=40')\r\n        .then(response => {\r\n            \r\n            return(response.json());\r\n        }).then(data=>{\r\n            \r\n            this.setState({\r\n                quote: data.content,\r\n                author: data.author\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        })\r\n    }\r\n\r\n    year=()=>{\r\n        return this.state.momentContext.format(\"Y\");\r\n    }\r\n\r\n    month=()=>{\r\n        return this.state.momentContext.format(\"MMMM\");\r\n    }\r\n\r\n    daysIMonth=()=>{\r\n        return this.state.momentContext.daysInMonth();\r\n    }\r\n\r\n    curdate=()=>{\r\n        return this.state.momentContext.get(\"date\");\r\n    }\r\n    curday=()=>{\r\n        return this.state.momentContext.format(\"D\");\r\n    }\r\n\r\n    firstDayOfMonth=()=>{\r\n        return moment(this.state.momentContext).startOf('month').format('d')\r\n    }\r\n\r\n    handlechange=(e)=>{\r\n        this.setState({\r\n            momentContext:moment(this.state.momentContext).set('month', this.state.months.indexOf(e.target.value))\r\n\r\n        }, ()=>{\r\n            \r\n            \r\n        })\r\n    }\r\n    handlechangeyear=(e)=>{\r\n        \r\n    \r\n        this.setState({\r\n            momentContext:moment(this.state.momentContext).set('year', e.target.value)\r\n\r\n        }, ()=>{\r\n            \r\n        })\r\n    }\r\n    componentDidMount() {\r\n        \r\n        this.update = setInterval(() => {\r\n            this.setState({ time: new Date(),\r\n            });\r\n        }, 1 * 1000); \r\n      }\r\n      componentWillUnmount() {\r\n      clearInterval(this.update);\r\n      }\r\n    render(){\r\n        let blanks=[]\r\n        \r\n        for(let i=0;i<this.firstDayOfMonth();i++)\r\n        {\r\n            blanks.push(<span className=\"day\" key={(i+1)+40}>{\" \"}</span>)\r\n        }\r\n        \r\n        let daysM=[]\r\n        for(let i=1;i<=this.daysIMonth();i++)\r\n        {\r\n            let c=(i===this.curdate() && this.month()===this.state.thisMonth && this.year()===this.state.thisYear )?\"day cur-date\": \"day\"\r\n            c+=(this.state.reqdate===i+\"-\"+this.month()?\" active\":'')\r\n            daysM.push(<span key={i} className={c} onClick={()=>{\r\n                this.props.reqdatechange(moment(i+\".\"+this.month()+\".\"+this.year()).format(\"DD-MM-YYYY\"))\r\n                this.setState({\r\n                    reqdate:i+\"-\"+this.month()\r\n                }, ()=>{\r\n                   \r\n                })\r\n            }}>{i}</span>)\r\n        }\r\n\r\n        daysM=[...blanks, ...daysM]\r\n        \r\n        //console.log(daysM)\r\n        return(\r\n            <div>\r\n                <span className=\"f4\">Welcome, {\r\n                    firebase.auth().currentUser.displayName\r\n                }</span>\r\n                <br />\r\n                <span className=\"f6\">\r\n                {\r\n                    this.state.quote\r\n                }</span>\r\n                <br />\r\n                <span className=\"f7 tc\">\r\n                By {\r\n                    this.state.author\r\n                }</span>\r\n\r\n                <br />\r\n                <br />\r\n                <div>\r\n                    \r\n                \r\n                    <div className=\"calendar\">\r\n                    <div className=\"months-bar\">\r\n                    {//this.month()\r\n                    }\r\n                        <select className=\"months-popup\" onChange={this.handlechange} value={this.month()}>\r\n                            \r\n                            \r\n                        {\r\n                            \r\n                            this.state.months.map((data)=>{\r\n                                return (\r\n                                    <option value={data}>\r\n                                        {data}\r\n\r\n                                    </option>\r\n                                )\r\n                            })\r\n                            \r\n                        }\r\n                        </select>\r\n\r\n\r\n                        {//this.year()\r\n                        }\r\n                        <select className=\"months-popup\" onChange={this.handlechangeyear} value={this.year()}>\r\n                            \r\n                            \r\n                        {\r\n                            \r\n                            this.state.months.map((data, index)=>{\r\n                                k=parseInt(this.state.thisYear)\r\n                                return (\r\n                                    <option value={k+index}>\r\n                                        {k+index}\r\n\r\n                                    </option>\r\n                                )\r\n                            })\r\n                            \r\n                        }\r\n                        </select>\r\n\r\n                    </div>\r\n                        <div  className=\"Alldays\">\r\n                        {\r\n                            this.state.weekdaysshort.map((days)=>{\r\n                                return (\r\n                                    <span key={days+900} className=\"daysOfWeek\">{days}</span>\r\n\r\n                                )\r\n                                \r\n                            })\r\n                        }\r\n                        </div>\r\n                        <div className=\"Alldays\">\r\n                        {\r\n                            daysM.map((d)=>{\r\n                                return (\r\n                                    d\r\n                                )\r\n                            })\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <span className=\"f4 pa3 mt2\"> {this.state.time.toLocaleTimeString()}</span>\r\n                    <br/><br/>\r\n                    <center>\r\n                        <div className=\"bt br bl w-50 pa1 b--white-10\">\r\n                            <div className=\"b pa1\">UPCOMING EVENTS</div>\r\n                            <div className=\"f6\">{displaydday}<br />{countdown}</div>\r\n                        </div>\r\n                  \r\n                </center>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Screen","import React from 'react';\r\nimport './Modal.css'\r\n\r\n\r\n var t;\r\nclass Modal extends React.Component{\r\n  constructor(props)\r\n  {\r\n    let pr={\r\n      open:false,\r\n      msg:'null',\r\n      color:'red'\r\n\r\n    }\r\n    super(props)\r\n    console.log(props)\r\n    this.state={\r\n     p:pr\r\n    }\r\n    \r\n    \r\n  }\r\n  showmodal(req) {\r\n    this.setState({ p:req }, ()=>{\r\n    });\r\n  }\r\n  componentDidUpdate(){\r\n    let pr={\r\n      open:false,\r\n      msg:'null',\r\n      color:'red'\r\n\r\n    }\r\n    \r\n    this.state.p.open?t=setTimeout(() => this.setState({p:pr}, ()=>console.log(\"dispp\")), 6000):clearTimeout(t);\r\n    \r\n  }\r\n\r\n\r\n \r\n  render()\r\n  {\r\n    \r\n        var cname=\"content \"+this.state.p.color\r\n        var mname=\"modal \"+this.state.p.open\r\n        \r\n      return(\r\n        <div className={mname} \r\n        style={{\r\n         opacity: this.state.p.open ? '1' : '0'\r\n          }}>\r\n            <div className={cname}>\r\n               {\r\n               this.state.p.msg\r\n               }\r\n              <button className=\"crossbutton bg-black\" onClick={()=>{var toggle=this.state.p\r\n                toggle={\r\n                    ...toggle,\r\n                    open: !toggle.open\r\n                }\r\n                this.setState({\r\n                    p:toggle\r\n                }, ()=>{\r\n                  \r\n                })}}>\r\n                  <span >&times;</span>\r\n              </button>\r\n            </div>\r\n        </div>\r\n      ) \r\n  \r\n}\r\n}\r\n  \r\n \r\n \r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport firebase from '../../Config/firebase'\r\n\r\nvar z=''; var pr;\r\n const db=firebase.firestore()\r\nclass Subtask extends React.Component{\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n    \r\n    this.state={\r\n      user:'',\r\n      task:'',\r\n      subtasks:'',\r\n      completed:'',\r\n      reqdatechange:props.reqdatechange,\r\n      showmodal:props.showmodal,\r\n      openmodal:false\r\n    }\r\n    pr={\r\n      open:false,\r\n      color:'red',\r\n      msg:'null'\r\n    }\r\n\r\n    \r\n  }\r\n \r\n  showsubtask(req, user) {\r\n    this.setState({user:user, task:req, subtasks:req.subtasks, completed:req.completed }, ()=>{\r\n      \r\n    });\r\n  }\r\n\r\n  \r\n \r\n  render()\r\n  {\r\n    if(this.state.task!='')\r\n        {\r\n          return(\r\n        \r\n            <div>\r\n              \r\n              \r\n              <div className='center grid2'>\r\n              {\r\n                this.state.openmodal?\r\n                <div className=\"modal  true\">\r\n                  <div className=\"content red\">\r\n                  do you want to delete?<br />\r\n                  <button onClick={()=>{\r\n                      \r\n                      this.setState({\r\n                        openmodal:false\r\n                      }, ()=>{})}}>no</button>\r\n                  <a href=\"#carousel__slide1\">\r\n                  <button onClick={()=>{\r\n                      this.props.updateSlide(false);\r\n                      db.collection(this.state.user.uid).doc(this.state.task.id)\r\n                      .delete()\r\n                      .then(()=>{ this.state.reqdatechange(); this.setState({\r\n                             task:'',\r\n                             openmodal:false,\r\n                              }, ()=>{}\r\n                              )\r\n                            })\r\n                            \r\n                      }}>yes</button>\r\n                    </a>  \r\n\r\n                  </div>\r\n                  \r\n                </div>:''\r\n              }\r\n                <div className=\"yflow ba ma1 bg-black pa2\">\r\n                <div className=\"tl\">\r\n                  <a href=\"#carousel__slide1\">\r\n                    <button className=\"crossbutton\" onClick={()=>{this.setState({task:''}, ()=>{});this.props.updateSlide(false);}}>\r\n                      X\r\n                    </button>\r\n                  </a>\r\n                </div>\r\n                <div className=\"ma2\">\r\n                {this.state.task.title}<br />\r\n                    {this.state.task.date}<br /><br/>\r\n                    {this.state.task.desc}<br />\r\n                    Item:<textarea id=\"input-field\" className=\"br2 w-50 mt2\" onChange={(e)=>{z=e.target.value}}/><br />\r\n                </div><br/>\r\n                    <button className=\"ma2 custombutton grow\" onClick={()=>{\r\n              if(z==='')\r\n              {\r\n                pr={\r\n                  color:'red',\r\n                  msg:\"Subtask cannot be left blank\",\r\n                  open:true,\r\n                }\r\n                this.state.showmodal(pr)\r\n              }\r\n              else{\r\n                var s=this.state.subtasks;\r\n                s.push(z);\r\n                var c=this.state.completed;\r\n                c.push(0);\r\n                db.collection(this.state.user.uid).doc(this.state.task.id).set({\r\n                  ...this.state.task,\r\n                  subtasks: s,\r\n                  completed: c\r\n                })\r\n                .then(() => {\r\n                  Array.from(document.querySelectorAll(\"textarea\"))\r\n                  .forEach(input => (input.value = \"\"));\r\n                  z='';\r\n                  this.setState({\r\n                  subtasks:s,\r\n                  completed:c\r\n                  }, ()=>{\r\n\r\n                    })  \r\n                })\r\n                .catch((error) => {\r\n                    \r\n                    console.log(error);\r\n                });\r\n              }\r\n              \r\n          }}>New Item</button>\r\n            <br />\r\n            <br />\r\n            \r\n            \r\n              <button className=\"mt4 custombutton grow\" onClick={()=>{\r\n                      \r\n                     this.setState({\r\n                       openmodal:true\r\n                     }, ()=>{})}}>Delete Entire List</button>\r\n            \r\n          \r\n                </div>\r\n\r\n                    \r\n                    <div  className=\"yflow ba ma1 bg-black pa3\" >\r\n                    <div className=\"pa2 mv2\">PENDING</div>\r\n                    \r\n                    {\r\n                      \r\n                      this.state.subtasks.map((doc, index)=>{\r\n                        var done=this.state.completed[index];\r\n                        \r\n                        return(\r\n                          done===0 || done===false?\r\n                          <div className=\" pa1 mh3 tl\" style={{display:'flex',justifyContent:'space-between'}}>\r\n                            <div className=\"w-80\">\r\n                            <input type=\"checkbox\" key={index+1000} checked={this.state.completed[index]}\r\n                              onChange={()=>{\r\n                                var c=this.state.completed\r\n                                c[index]=!c[index]\r\n                                this.setState({\r\n                                completed:c\r\n                              },  ()=>{\r\n                                var flag=1;\r\n                                for(var i=0;i<c.length;i++)\r\n                                  {\r\n                                    if(c[i]===false || c[i]===0)\r\n                                    {\r\n                                      flag=0;\r\n                                      break;\r\n                                    }\r\n\r\n                                  }\r\n                                  if(flag===1)\r\n                                  {\r\n                                    pr={\r\n                                      open: true,\r\n                                      msg:'congrats, no pending ',\r\n                                      color:'green'\r\n\r\n                                    }\r\n                                    this.state.showmodal(pr);\r\n                                  }\r\n                               db.collection(this.state.user.uid).doc(this.state.task.id).set({\r\n                                  ...this.state.task,\r\n                                  \r\n                                  completed:this.state.completed\r\n\r\n                                  \r\n                                })\r\n                              })\r\n                                }}/>&nbsp;\r\n                                <span className={this.state.completed[index]===true?\"strike\":\"\"}>{doc}</span>\r\n                            </div>\r\n                                <button className=\"crossbuttonlist\" onClick={()=>{\r\n                                    var c=this.state.subtasks\r\n                                    c.splice(index, 1)\r\n                                    var d=this.state.completed\r\n                                    d.splice(index, 1)\r\n                                    this.setState({\r\n                                    subtasks:c,\r\n                                    completed:d\r\n                              }, ()=>{\r\n                                     db.collection(this.state.user.uid).doc(this.state.task.id).set({\r\n                                        ...this.state.task,\r\n                                        completed: this.state.completed\r\n                                      })\r\n                              })}}>X</button>\r\n\r\n\r\n                            \r\n                            </div>\r\n                          :''\r\n                        )\r\n                      }\r\n                      )\r\n                    }\r\n                    </div>\r\n                    <div  className=\"yflow ba ma1 bg-black pa3\" >\r\n                     <div className=\"pa2 mv2\">COMPLETED</div>\r\n                      \r\n                    {\r\n                      this.state.subtasks.map((doc, index)=>{\r\n                        var done=this.state.completed[index];\r\n                        return(\r\n                          done===true?\r\n                          <div className=\" pa1 mh3 tl\" style={{display:'flex',justifyContent:'space-between'}}>\r\n                            <div className=\"w-80\">\r\n                            <input type=\"checkbox\" key={index+2000} checked={this.state.completed[index]}\r\n                              onChange={()=>{\r\n                                var c=this.state.completed\r\n                                c[index]=!c[index]\r\n                                this.setState({\r\n                                completed:c\r\n                              },  ()=>{\r\n                                \r\n                               db.collection(this.state.user.uid).doc(this.state.task.id).set({\r\n                                  ...this.state.task,\r\n                                  \r\n                                  completed:this.state.completed\r\n                                })\r\n                              })\r\n                                }}/>&nbsp;\r\n                                <span className={this.state.completed[index]===true?\"strike\":\"\"}>{doc}</span>\r\n                            \r\n                            </div>\r\n                                <button className=\"crossbuttonlist\" onClick={()=>{\r\n                                    var c=this.state.subtasks\r\n                                    c.splice(index, 1)\r\n                                    var d=this.state.completed\r\n                                    d.splice(index, 1)\r\n                                    this.setState({\r\n                                    subtasks:c,\r\n                                    completed:d\r\n                              }, ()=>{\r\n                                     db.collection(this.state.user.uid).doc(this.state.task.id).set({\r\n                                        ...this.state.task,\r\n                                        completed: this.state.completed\r\n                                      })\r\n                              })}}>X</button>\r\n\r\n\r\n                            \r\n                            </div>\r\n                          :''\r\n                        )\r\n                      }\r\n                      )\r\n                    }\r\n                    </div>\r\n                    \r\n                    \r\n\r\n                    \r\n              \r\n                </div>\r\n            </div>\r\n          )\r\n                 \r\n        }\r\n        else{\r\n          return(\r\n            <div className=\"nonedisplay\">\r\n\r\n            </div>\r\n          )\r\n        }\r\n      \r\n      \r\n    \r\n    \r\n    \r\n  }\r\n}\r\n\r\n\r\n\r\n  \r\n \r\n \r\n\r\nexport default Subtask;\r\n","import React from 'react';\r\nimport Modal from '../Modals/Modal';\r\nimport firebase from '../../Config/firebase';\r\nimport './settings.css';\r\n\r\n\r\nvar x='', y='', z, newPassword, pr={\r\n  open:false,\r\n  msg:'null',\r\n  color:'red'\r\n};\r\nvar file=0;\r\nclass Settings extends React.Component{\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n    console.log(props);\r\n    this.state={\r\n        onRouteChange:props.onRouteChange,\r\n        user:firebase.auth().currentUser,\r\n        photo: firebase.auth().currentUser.photoURL,\r\n        updatenavbar: props.updatenavbar\r\n    }\r\n    x=this.state.user.displayName;\r\n    y=this.state.user.photoURL;\r\n    z=this.state.user.email;\r\n    this.modalref=React.createRef()\r\n    pr={\r\n      open:false,\r\n      msg:'null',\r\n      color:'red'\r\n    };\r\n  }\r\n  \r\n  changeprofilesettings()\r\n  {\r\n    this.state.user.updateProfile({\r\n      displayName: x,\r\n      //photoURL: y\r\n    }).then(() => {\r\n      \r\n      if(file!=0)\r\n      {\r\n        \r\n        var storageRef = firebase.storage().ref('profilePictures/' +this.state.user.uid+'/'+file.name)\r\n        \r\n        var uploadTask = storageRef.put(file);\r\n        uploadTask.on('state_changed', \r\n                  (snapshot) => {\r\n                    // Observe state change events such as progress, pause, and resume\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    console.log('Upload is ' + progress + '% done');\r\n                    pr={\r\n                      color:'blue',\r\n                      msg:'Upload is ' + progress + '% done',\r\n                      open:true\r\n                    };\r\n                    this.modalref.current.showmodal(pr);\r\n                    switch (snapshot.state) {\r\n                      case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                        console.log('Upload is paused');\r\n                        break;\r\n                      case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                        console.log('Upload is running');\r\n                        break;\r\n                    }\r\n                  }, \r\n                  (error) => {\r\n                    pr={\r\n                      color:'red',\r\n                      msg:error.message,\r\n                      open:true\r\n                    };\r\n                    this.modalref.current.showmodal(pr);\r\n                  }, \r\n                  () => {\r\n                    // Handle successful uploads on complete\r\n                    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n                    uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                      console.log('File available at', downloadURL);\r\n                      y=downloadURL\r\n                      console.log(y)\r\n      \r\n                          this.state.user.updateProfile({\r\n                            photoURL:y\r\n                          }).then(()=>\r\n                          {\r\n                            this.setState({\r\n                              photo:y\r\n                            }, ()=>{\r\n                              console.log(\"saved\")\r\n                              pr={\r\n                                color:'green',\r\n                                msg:'changes saved successfully',\r\n                                open:true\r\n                              };\r\n                              this.modalref.current.showmodal(pr);\r\n                              this.state.updatenavbar()\r\n                              file=0;\r\n                              \r\n                            })\r\n                          \r\n                          })\r\n                    });\r\n                  }\r\n                );\r\n            \r\n      }\r\n      else{\r\n        pr={\r\n          color:'green',\r\n          msg:'changes saved',\r\n          open:true\r\n        };\r\n        this.modalref.current.showmodal(pr);\r\n      }\r\n    \r\n  \r\n      \r\n      \r\n    \r\n      \r\n    }).catch((error) => {\r\n      pr={\r\n        color:'red',\r\n        msg:error.message,\r\n        open:true\r\n      };\r\n      this.modalref.current.showmodal(pr);\r\n    });\r\n  }\r\n  changeaccountsettings()\r\n  {\r\n    this.state.user.updateEmail(z).then(() => {\r\n      // Update successful\r\n      // ...\r\n    }).catch((error) => {\r\n      pr={\r\n        color:'red',\r\n        msg:error.message,\r\n        open:true\r\n      };\r\n      this.modalref.current.showmodal(pr);\r\n    });\r\n    this.state.user.updatePassword(newPassword).then(() => {\r\n      // Update successful.\r\n      pr={\r\n        color:'green',\r\n        msg:'account details changed',\r\n        open:true\r\n      };\r\n      this.modalref.current.showmodal(pr);\r\n    }).catch((error) => {\r\n      pr={\r\n        color:'red',\r\n        msg:error.message,\r\n        open:true\r\n      };\r\n      this.modalref.current.showmodal(pr);\r\n    });\r\n  }\r\n\r\n  render(){\r\n   \r\n      return (\r\n        <div className=\"settings tl\">\r\n          <div>\r\n          <button className=\"custombutton\" onClick={()=>this.state.onRouteChange('Home')}>Back Home</button><br /><br />\r\n          <img src={this.state.photo} ></img><br />\r\n          <Modal ref={this.modalref} content={pr} />\r\n          </div>\r\n          \r\n\r\n        <div>\r\n        <div className=\"settings-grid tl\">          \r\n            Change Name: <input id=\"input-field\" onChange={(e)=>{x=e.target.value}} placeholder={this.state.user.displayName}/>\r\n            Change Photo: <input type=\"file\" id=\"image\" onChange={(e)=>{file=e.target.files[0]}} /><br />\r\n            <button className=\"custombutton w-30 ml0\" onClick={ ()=>{this.changeprofilesettings();}}>save changes</button>\r\n        </div>\r\n          \r\n          \r\n        <div className=\"settings-grid tl\">   \r\n        Change Email: <input id=\"input-field\" onChange={(e)=>{z=e.target.value}} placeholder={this.state.user.email}/><br />\r\n        Change Password: <input id=\"input-field\" type=\"password\" onChange={(e)=>{newPassword=e.target.value}} /><br />\r\n        <button className=\"custombutton w-30 ml0\" onClick={()=>{this.changeaccountsettings();}}>save changes</button>\r\n        </div>\r\n\r\n\r\n          <center>\r\n          <p onClick={()=>{const user = firebase.auth().currentUser;\r\n\r\n            user.delete().then(() => {\r\n              // User deleted.\r\n              window.location.reload(true);\r\n              this.state.onRouteChange('SignIn');\r\n            }).catch((error) => {\r\n              // An error ocurred\r\n              // ...\r\n            })}}\r\n            className='pa2 ma2 f4 link dim underline w-40' style={{cursor:'pointer'}}>Delete Account\r\n              </p>\r\n            </center>\r\n        </div>\r\n\r\n\r\n          \r\n        </div>\r\n        \r\n      );\r\n    }\r\n    \r\n  }\r\n  \r\n\r\n\r\n\r\nexport default Settings;\r\n","import React, { Component } from 'react';\r\nimport SignIn from './Components/SignIn/SignIn';\r\nimport Register from './Components/Register/Register'; \r\nimport Home from './Components/Home/Home';\r\nimport Navigation from './Components/Navigation/Navigation';\r\nimport Settings from './Components/Settings/Settings';\r\nimport DDay from './Components/DDay/DDay';\r\nimport Modal from './Components/Modals/Modal';\r\nimport './App.css';\r\n\r\nvar pr;\r\nclass App extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      route:'SignIn',\r\n      user:0\r\n    }\r\n    this.navref=React.createRef();\r\n    this.myModal=React.createRef();\r\n    pr={\r\n      open:false,\r\n      color:'red',\r\n      msg:'null'\r\n    }\r\n  }\r\n\r\n  onRouteChange=(route)=>{\r\n    this.setState({route:route});\r\n  }\r\nonUserChange=(user)=>{\r\n  console.log(user)\r\n  this.setState({user:user}, ()=>\r\n  {\r\n    \r\n    this.navref.current.updatenavbar('Home');\r\n  })\r\n}\r\n  render(){\r\n  return (\r\n    <div className=\"App\">\r\n      <Modal content={pr} ref={this.myModal}/>\r\n      <Navigation onRouteChange={this.onRouteChange} route={this.state.route} ref={this.navref}/>\r\n      {this.state.route==='SignIn'?\r\n      <SignIn onRouteChange={this.onRouteChange} onUserChange={this.onUserChange} showmodal={(p)=>{this.myModal.current.showmodal(p)}}/>\r\n      :this.state.route==='Register'?\r\n      <Register onRouteChange={this.onRouteChange} onUserChange={this.onUserChange} showmodal={(p)=>{this.myModal.current.showmodal(p)}}/>\r\n      :this.state.route==='Settings'?\r\n      <Settings onRouteChange={this.onRouteChange} user={this.state.user} updatenavbar={()=>this.navref.current.updatenavbar('Settings')} showmodal={(p)=>{this.myModal.current.showmodal(p)}}/>\r\n      :this.state.route==='Home'?\r\n      <Home user={this.state.user} onRouteChange={this.onRouteChange}/>\r\n      :this.state.route==='DDay'?\r\n      <DDay onRouteChange={this.onRouteChange} user={this.state.user.uid}/>\r\n      :' Loading '\r\n      }\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport firebase from '../../Config/firebase'\r\n\r\n\r\n const db=firebase.firestore()\r\n var newlist=[]\r\n \r\nclass ListItem extends React.Component{\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n    \r\n    this.state={\r\n      user:props.user,\r\n      reqdate:props.requiredDate,\r\n      loaded: false,\r\n      showsubtask: props.showsubtask\r\n    }\r\n    this.getdata()\r\n    \r\n  }\r\n  datemethod(req) {\r\n    this.setState({ reqdate: req }, ()=>{\r\n      \r\n      this.getdata();\r\n    });\r\n  }\r\n\r\n  \r\n  getdata(){\r\n    db.collection(this.state.user).where(\"date\", \"==\", this.state.reqdate)\r\n    .get().then((querySnapshot) => {\r\n        newlist=[]\r\n        \r\n        querySnapshot.forEach((doc) => {\r\n            var k={\r\n                id: doc.id,\r\n                ...doc.data()\r\n              }\r\n              \r\n              newlist.push(k)\r\n              \r\n            \r\n        })\r\n        this.setState({\r\n          loaded: true\r\n        }, ()=>{\r\n          \r\n        })\r\n        \r\n    }).catch((error)=>\r\n    {\r\n      var pr={\r\n        open:true,\r\n        msg:error.message,\r\n        color:'red'\r\n      }\r\n      this.state.showmodal(pr);\r\n      console.log(error)\r\n      \r\n    })\r\n  }\r\n\r\n  render()\r\n  {\r\n    if(this.state.loaded)\r\n    {\r\n      return(\r\n        <div>\r\n          <div className='w-70 bg-black center'>\r\n               <div className=\"pv2\"> {this.state.reqdate}<br /></div>\r\n                \r\n                {\r\n                  newlist.map((doc, index)=>{\r\n                    \r\n                    return(\r\n                      <div>\r\n                        \r\n                        <a href=\"#carousel__slide2\">\r\n                          <button className=\"custombutton grow\" \r\n                          onClick={()=>{this.state.showsubtask(doc);\r\n                          this.props.updateSlide(true);}} \r\n                          key={index}>\r\n                          {doc.title}\r\n                          </button>\r\n                        </a>\r\n                        </div>\r\n                      \r\n                    )\r\n                  })\r\n                }\r\n            </div>\r\n        </div>\r\n      )\r\n              }\r\n      else{\r\n        return(\r\n          <div>loading</div>\r\n        )\r\n      }\r\n  }\r\n}\r\n\r\n\r\n\r\n  \r\n \r\n \r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport Screen from '../Calendar/Screen';\r\nimport ListItem from '../ListItem/ListItem';\r\nimport './Home.css';\r\nimport firebase from '../../Config/firebase'\r\nimport moment from 'moment';\r\nimport Modal from '../Modals/Modal';\r\nimport Subtask from '../ListItem/Subtask';\r\n\r\n const db=firebase.firestore()\r\n var pr={\r\n   open:false,\r\n   msg:'null',\r\n   color:'green'\r\n }\r\n var reqdate=moment().format(\"DD-MM-YYYY\")\r\n var x='';\r\n var y='';\r\n var z='';\r\nvar completed=[];\r\nclass Home extends React.Component{\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n    this.state={\r\n      user:props.user,\r\n      listdets:{\r\n        title:'',\r\n        date: moment().format(\"DD-MM-YYYY\"),\r\n        desc: '',\r\n        subtasks:''\r\n      },\r\n      slide:false,\r\n      onRouteChange:props.onRouteChange\r\n     // switch:false\r\n    }\r\n    this.myRef = React.createRef();\r\n    this.myModal = React.createRef();\r\n    this.subtaskref = React.createRef();\r\n    pr={\r\n      open:false,\r\n      msg:'null',\r\n      color:'green'\r\n    }\r\n    \r\n  }\r\n  updateSlide=(s)=>{this.setState({slide:s})}\r\n  //updateSwitch=(s)=>{this.setState({switch:s})}\r\n  \r\nshowsubtask(doc){\r\n  this.subtaskref.current.showsubtask(doc, this.state.user);\r\n}\r\n\r\n  render(){\r\n    return (\r\n        <div>\r\n          \r\n          <div className='br2 ba white b--white-10 shadow-5 carousel'>\r\n           \r\n            <Modal content={pr} ref={this.myModal}/>\r\n           \r\n            <a href=\"#carousel__slide2\" className=\"isDisabled\">  \r\n            <img src={\"https://image.flaticon.com/icons/svg/130/130884.svg\"} alt=\"hello\" id=\"right\"/>\r\n            </a>\r\n            {this.state.slide?\r\n            <a href=\"#carousel__slide1\" onClick={()=>{this.updateSlide(false)}}>\r\n            <img src={\"https://image.flaticon.com/icons/svg/130/130882.svg\"} alt=\"hell\" id=\"left\"/>\r\n            </a>:\r\n            <a href=\"#carousel__slide1\" className=\"isDisabled\">\r\n            <img src={\"https://image.flaticon.com/icons/svg/130/130882.svg\"} alt=\"hell\" id=\"left\"/>\r\n            </a>\r\n            }\r\n            <ol className=\"carousel__viewport ml-0\">\r\n            <li className=\"carousel__slide grid1 yflow\" id=\"carousel__slide1\">\r\n              \r\n            <div className='tl pa2 yflow' id=\"home_1\">\r\n              <Screen user={this.state.user} reqdatechange={(newdate)=>{reqdate=newdate; this.myRef.current.datemethod(reqdate)}} showmodal={(p)=>{this.myModal.current.showmodal(p)}}/>\r\n              <div className=\"bl br bb w-50 center b--white-10\">\r\n              <center>\r\n                <p className=\"b pv2 ph3 input-reset ba b--white bg-transparent grow pointer f6 dib white\" \r\n                onClick={()=>{this.state.onRouteChange('DDay');}}\r\n                >Calendar Events</p>\r\n              </center>\r\n              </div>\r\n            </div>\r\n          <div className=\"bl yflow\" id=\"home_2\" >\r\n            <br/>\r\n            <table className=\"center\">\r\n            <tr><td className=\"tl\">Title: </td><td className=\"tl\"><input id=\"input-field\" onChange={(e)=>{x=e.target.value}}/></td></tr>\r\n            <tr><td className=\"tl\"> Desc: </td><td className=\"tl\"><input  id=\"input-field\" onChange={(e)=>{y=e.target.value}}/></td></tr>\r\n            <tr><td className=\"tl\">Subtasks:</td><td className=\"tl\"><textarea id=\"input-field\" onChange={(e)=>{z=e.target.value}}/></td></tr>\r\n            </table>\r\n            <button className=\"custombutton grow\" onClick={()=>{\r\n              if(x===''||y==='')\r\n              {\r\n                pr={\r\n                  color:'red',\r\n                  msg:\"Title or content cannot be left blank\",\r\n                  open:true,\r\n                }\r\n                this.myModal.current.showmodal(pr);\r\n              }\r\n              else{\r\n                completed=z.split('\\n')\r\n              completed.fill(0);\r\n            db.collection(this.state.user.uid).add({\r\n                title: x,\r\n                date: reqdate,\r\n                desc: y,\r\n                subtasks:  z.split('\\n'),\r\n                completed: completed\r\n            }).then(() => {\r\n              this.myRef.current.datemethod(reqdate)\r\n              pr={\r\n                color:'green',\r\n                msg:\"Document successfully written!\",\r\n                open:true,\r\n              }\r\n              this.myModal.current.showmodal(pr)\r\n              Array.from(document.querySelectorAll(\"input\")).forEach(\r\n                input => (input.value = \"\")\r\n              );\r\n              Array.from(document.querySelectorAll(\"textarea\")).forEach(\r\n                input => (input.value = \"\")\r\n              );\r\n              x=\"\";y=\"\";z=\"\";\r\n              this.setState({\r\n                listdets:{\r\n                  title:'',\r\n                  date: '',\r\n                  desc: '',\r\n                  subtasks:''\r\n                }\r\n              })\r\n          })\r\n          .catch((error) => {\r\n              \r\n              pr={\r\n                color:'red',\r\n                msg:\"Error writing document: \"+ error,\r\n                open:true,\r\n              }\r\n              this.myModal.current.showmodal(pr)\r\n          });\r\n              }\r\n              \r\n          }}>New List</button>\r\n            <br />\r\n            <br />\r\n            \r\n            <ListItem user={this.state.user.uid}\r\n            requiredDate={reqdate} ref={this.myRef} \r\n            showsubtask={(doc)=>{this.showsubtask(doc)}} \r\n            updateSlide={this.updateSlide} showmodal={(p)=>{this.myModal.current.showmodal(p)}}/>\r\n           \r\n          </div>\r\n          </li>\r\n         <li className=\"carousel__slide yflow\" id=\"carousel__slide2\">\r\n          <div className=\"ma1\">\r\n           <Subtask  ref={this.subtaskref} \r\n          showmodal={(p)=>{this.myModal.current.showmodal(p)}}\r\n          reqdatechange={()=>{this.myRef.current.datemethod(reqdate);}}\r\n          updateSlide={this.updateSlide}\r\n          />\r\n         </div>\r\n          \r\n         </li>\r\n        </ol>\r\n        </div>\r\n        {/*<div>\r\n          <ul>\r\n            <li className=\"slideitems pa3\"><a href=\"#carousel__slide1\" className=\"slidebutton\" onClick={()=>{this.updateSlide(false)}}>slide1</a></li>\r\n            {this.state.slide?\r\n              <li className=\"slideitems pa3\"><a href=\"#carousel__slide2\" className=\"slidebutton\" >slide2</a></li>:\r\n              <li className=\"slideitems pa3\"><a href=\"#carousel__slide2\" className=\"slidebutton isDisabled\" >slide2</a></li>\r\n            }\r\n          </ul>\r\n          </div>*/}\r\n        \r\n        </div>\r\n        \r\n      );\r\n    }\r\n  \r\n    \r\n  }\r\n  \r\n\r\n\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './Navigation.css';\r\nimport firebase from '../../Config/firebase'\r\nclass Navigation extends React.Component {\r\n\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n    console.log(props)\r\n    this.state={\r\n      onRouteChange:props.onRouteChange,\r\n      route:props.route\r\n    }\r\n  }\r\n  updatenavbar(route)\r\n  {\r\n    this.setState({\r\n      route:route\r\n    }, ()=>{\r\n\r\n    })\r\n  }\r\n\r\n  render()\r\n  {\r\n    \r\n  return (\r\n    <nav className='mb4 main' >\r\n        <div><p className='pa2 f2 ma1 b'>Coreo</p></div>\r\n        {this.state.route==='Home' || this.state.route==='Settings'?\r\n        <div class=\"dropdown mr2 h-70\" style={{alignSelf:'center'}}>\r\n          <button className=\"dropbtn\">\r\n            <img className=\"br-100 mr3\" src={firebase.auth().currentUser.photoURL}/>\r\n          </button>\r\n          <div className=\"dropdown-content\">\r\n              <p  onClick={()=>{\r\n                    firebase.auth().signOut().then(() => {\r\n                      // Sign-out successful.\r\n                      window.location.reload(true);\r\n                      this.state.onRouteChange('SignIn');\r\n                    }).catch((error) => {\r\n                      // An error happened.\r\n                    });}}\r\n                  className='pa2 ma2 f4 link dim underline'>Sign out</p>\r\n\r\n              <p  onClick={()=>{\r\n                \r\n                  this.state.onRouteChange('Settings');\r\n                }}\r\n              className='pa2 ma2 f4 link dim underline'>Settings</p>\r\n              <p  onClick={()=>{\r\n                \r\n                this.state.onRouteChange('Home');\r\n              }}\r\n              className='pa2 ma2 f4 link dim underline'>Home</p>\r\n              <p  onClick={()=>{\r\n                \r\n                this.state.onRouteChange('DDay');\r\n              }}\r\n              className='pa2 ma2 f4 link dim underline'>Upcoming Events</p>\r\n\r\n\r\n          </div>\r\n       \r\n          </div>\r\n          \r\n        \r\n        :<div className='links1'>\r\n        <p\r\n        onClick={()=>this.state.onRouteChange('SignIn')}\r\n        className='pa2 ma2 f4 link dim underline'>Sign In</p>\r\n        <p \r\n        onClick={()=>this.state.onRouteChange('Register')}\r\n        className='pa2 ma2 f4 link dim underline'>Register</p>\r\n        </div>\r\n        }\r\n    </nav>\r\n  );\r\n\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","\r\nimport React from 'react';\r\nimport Modal from '../Modals/Modal';\r\nimport moment from 'moment';\r\nimport firebase from '../../Config/firebase';\r\nimport './DDay.css';\r\nvar pr={\r\n    open:false,\r\n    msg:'null',\r\n    color:'green'\r\n  }\r\nconst db=firebase.firestore()\r\n\r\nvar x='',y='';\r\nvar pr;\r\nvar newlist=[];\r\nclass DDay extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state={\r\n            user: props.user,\r\n            dday:[],\r\n            loaded:false,\r\n        }\r\n        this.myModal = React.createRef();\r\n        \r\n            this.getdata();\r\n    }\r\n    getdata(){\r\n        db.collection(this.state.user).doc(\"d-day\")\r\n        .get().then((querySnapshot) => {\r\n            \r\n            \r\n            \r\n            if(querySnapshot.data()=='undefined' || querySnapshot.exists==false)\r\n            {\r\n                \r\n                this.setState({\r\n                    loaded:false\r\n                }, ()=>{\r\n                    this.getdata();\r\n                });\r\n            }\r\n            else{\r\n                \r\n                newlist=querySnapshot.data().dday;\r\n            }\r\n                \r\n            \r\n            this.setState({\r\n                loaded: true\r\n            }, ()=>{\r\n               \r\n            })\r\n            \r\n        })\r\n      }\r\n    \r\n    render(){\r\n       \r\n        return(\r\n            \r\n            <div className=\"br2 h-500px ba white b--white-10 shadow-5 dday\">\r\n                <Modal content={pr} ref={this.myModal}/>\r\n                <div className=\"tl\">\r\n                    <button className=\"crossbutton\" onClick={()=>{this.props.onRouteChange('Home')}}>\r\n                        X\r\n                    </button>\r\n                </div>\r\n                    <div className=\"pa2 ma2 b f3\">EVENT DETAILS</div><br/>\r\n                    <div className=\"center pa2\" style={{display:'flex',justifyContent:'center'}}>\r\n                    <div className=\"tl mr4\">\r\n                        Title: <br/><input id=\"input-field\" onChange={(e)=>{x=e.target.value}}/><br/><br/>\r\n                    \r\n                        Date: <br/><input  id=\"input-field\" type=\"date\" data-date-format=\"DD-YYYY-MM\" onChange={(e)=>{y=moment(e.target.valueAsDate).format('DD-MM-YYYY'); }}/><br />\r\n                    </div>\r\n                    <div style={{alignSelf:'center'}} className=\"ma3\">\r\n                    <button className=\"custombutton grow pa2 ma2\" onClick={()=>{\r\n                        if(x===''||y==='')\r\n                        {\r\n                            pr={\r\n                                color:'red',\r\n                                msg:\"Title or Date cannot be left blank\",\r\n                                open:true,\r\n                            }\r\n                            this.myModal.current.showmodal(pr);\r\n                        }\r\n                        else\r\n                        {\r\n                            var newd={\r\n\r\n                            title:x,\r\n                            date: y,\r\n\r\n                                };\r\n                                x='';\r\n                                y='';\r\n                            newlist.push(newd);\r\n                            var today=moment().format(\"DD-MM-YYYY\")\r\n                    \r\n                            var endDate = moment(today, \"DD/MM/YYYY\");\r\n                    \r\n                            newlist.sort((a, b) => moment(a.date, \"DD-MM-YYYY\").diff(endDate, \"days\")  - moment(b.date, \"DD-MM-YYYY\").diff(endDate, \"days\"))\r\n                            console.log(newlist)\r\n                            db.collection(this.state.user).doc(\"d-day\").set({\r\n                                dday:newlist,\r\n                            }).then(() => {\r\n                            \r\n                            \r\n                            \r\n                            pr={\r\n                                color:'green',\r\n                                msg:\"D-Day successfully written!\",\r\n                                open:true,\r\n                            }\r\n                            this.myModal.current.showmodal(pr);\r\n                            Array.from(document.querySelectorAll(\"input\")).forEach(\r\n                                input => (input.value = \"\")\r\n                            );\r\n                            Array.from(document.querySelectorAll(\"date\")).forEach(\r\n                                input => (input.value = \"\")\r\n                            );\r\n                            this.setState({\r\n                                dday:newlist,\r\n                            })\r\n                        })\r\n                        .catch((error) => {\r\n                            \r\n                            pr={\r\n                                color:'red',\r\n                                msg:\"Error writing document: \"+ error,\r\n                                open:true,\r\n                            }\r\n                            this.myModal.current.showmodal(pr);\r\n                        });\r\n                }\r\n            \r\n            }}>New Event\r\n            </button></div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n\r\n\r\n            {\r\n                this.state.loaded&&newlist.length>0?\r\n                newlist.map((doc, index)=>{\r\n                    var today=moment().format(\"DD-MM-YYYY\")\r\n                    var startDate = moment(doc.date, \"DD-MM-YYYY\");\r\n                    var endDate = moment(today, \"DD/MM/YYYY\");\r\n                    var dateDiff = startDate.diff(endDate, \"days\");\r\n                    \r\n                    return(\r\n                        <div className=\"actualday mh5\" style={{display:'flex',justifyContent:'space-between'}}>\r\n                            <div className=\"w-33 tl\">{index+1+\")\"} {doc.title}:{doc.date}\r\n                            </div>\r\n                            {\r\n                                dateDiff>=0?\r\n                                <div className=\"green\">\r\n                                    days left:{dateDiff}\r\n                                </div>:\r\n                                <div>\r\n                                days passed:{-dateDiff}\r\n                                </div>\r\n                                \r\n                            }\r\n                            <div style={{alignSelf:'flex-start'}}>\r\n                            <button className=\"crossbuttonlist\" \r\n                             onClick={()=>{\r\n                                    newlist.splice(index, 1)\r\n                                    db.collection(this.state.user).doc(\"d-day\").set({\r\n                                        \r\n                                        dday: newlist\r\n                                      })\r\n\r\n                                      this.setState({},()=>{})\r\n                            }}>X</button>\r\n                            <br />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }):\r\n                    <div>\r\n                        no lists\r\n                    </div>\r\n                \r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DDay;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}